### Filter & Interceptor 종합 테스트 파일
### Spring Boot Filter와 Interceptor 학습을 위한 API 테스트
### 🚨 주의: 이 예제는 교육용으로 간단한 인증 메커니즘을 사용합니다.

### ========================================
### 1. Filter 테스트
### ========================================

### 1.1. 기본 Filter 체인 테스트
GET http://localhost:8080/filter/test
Content-Type: application/json

###

### 1.2. 성능 측정 Filter 테스트 (느린 응답)
GET http://localhost:8080/filter/slow?delay=2500
Content-Type: application/json

###

### 1.3. CORS Filter 테스트
GET http://localhost:8080/filter/cors
Origin: https://example.com
Content-Type: application/json

###

### 1.4. CORS Preflight 테스트
OPTIONS http://localhost:8080/filter/preflight
Origin: https://example.com
Access-Control-Request-Method: POST
Access-Control-Request-Headers: Content-Type

###

### 1.5. 성능 통계 조회
GET http://localhost:8080/filter/performance
Content-Type: application/json

###

### 1.6. 다양한 HTTP 메서드 테스트
POST http://localhost:8080/filter/test
Content-Type: application/json

{
  "name": "Filter POST 테스트",
  "timestamp": "2025-01-01T00:00:00"
}

###

PUT http://localhost:8080/filter/test
Content-Type: application/json

{
  "id": 1,
  "action": "update"
}

###

DELETE http://localhost:8080/filter/test
Content-Type: application/json

###

### ========================================
### 2. 간단한 인증 Filter 테스트 (교육용)
### ========================================

### 2.1. 인증 없이 접근 (실패 예상) - Filter에서 차단
GET http://localhost:8080/interceptor/auth/user
Content-Type: application/json

###

### 2.2. Bearer 토큰으로 인증 성공
GET http://localhost:8080/interceptor/auth/user
Authorization: Bearer test-token-123
Content-Type: application/json

###

### 2.3. 커스텀 헤더로 인증 성공
GET http://localhost:8080/interceptor/auth/user
X-Auth-Token: user-token-789
Content-Type: application/json

###

### 2.4. Basic 인증 (교육용 간단 구현)
GET http://localhost:8080/interceptor/auth/user
Authorization: Basic YWRtaW46cGFzc3dvcmQ=
Content-Type: application/json

###

### 2.5. 관리자 전용 엔드포인트 (USER 권한으로 접근 시도 - 실패 예상)
GET http://localhost:8080/interceptor/auth/admin
Authorization: Bearer user-token-789
Content-Type: application/json

###

### 2.6. 관리자 전용 엔드포인트 (ADMIN 권한으로 접근 성공)
GET http://localhost:8080/interceptor/auth/admin
Authorization: Bearer admin-token-456
X-User-Role: ADMIN
Content-Type: application/json

###

### ========================================
### 3. Interceptor 테스트
### ========================================

### 3.1. 기본 Interceptor 체인 테스트
GET http://localhost:8080/interceptor/test
Content-Type: application/json

###

### 3.2. 느린 처리 테스트 (Interceptor 시간 측정)
GET http://localhost:8080/interceptor/slow?delay=3000
Content-Type: application/json

###

### 3.3. POST 데이터 테스트 (파라미터 로깅 확인)
POST http://localhost:8080/interceptor/data?param1=value1&param2=value2
Content-Type: application/json

{
  "testData": "Interceptor POST 테스트",
  "numbers": [1, 2, 3],
  "nested": {
    "key": "value"
  }
}

###

### 3.4. ModelAndView 테스트
GET http://localhost:8080/interceptor/model
Content-Type: application/json

###

### 3.5. 예외 발생 테스트 (afterCompletion에서 예외 로깅 확인)
GET http://localhost:8080/interceptor/error
Content-Type: application/json

###

### 3.6. Interceptor 정보 조회
GET http://localhost:8080/interceptor/info
Content-Type: application/json

###

### ========================================
### 4. Filter vs Interceptor 비교 테스트
### ========================================

### 4.1. 실행 순서 확인
GET http://localhost:8080/comparison/execution-order
Content-Type: application/json

###

### 4.2. 차이점 설명 조회
GET http://localhost:8080/comparison/differences
Content-Type: application/json

###

### 4.3. 사용 사례 조회
GET http://localhost:8080/comparison/use-cases
Content-Type: application/json

###

### 4.4. 성능 비교
GET http://localhost:8080/comparison/performance
Content-Type: application/json

###

### 4.5. 예외 처리 방식 설명
GET http://localhost:8080/comparison/exception-handling
Content-Type: application/json

###

### 4.6. 예외 발생 테스트 (처리 방식 비교)
GET http://localhost:8080/comparison/trigger-exception
Content-Type: application/json

###

### ========================================
### 5. Actuator 엔드포인트 테스트
### ========================================

### 5.1. 애플리케이션 헬스 체크
GET http://localhost:8080/actuator/health
Content-Type: application/json

###

### 5.2. Bean 목록 조회
GET http://localhost:8080/actuator/beans
Content-Type: application/json

###

### 5.3. 환경 정보 조회
GET http://localhost:8080/actuator/env
Content-Type: application/json

###

### 5.4. 메트릭스 조회
GET http://localhost:8080/actuator/metrics
Content-Type: application/json

###

### ========================================
### 6. 고급 테스트 시나리오
### ========================================

### 6.1. 여러 헤더와 함께 복합 테스트
GET http://localhost:8080/filter/test
Authorization: Bearer test-token-123
X-User-Role: USER
Origin: https://testsite.com
User-Agent: FilterInterceptorTest/1.0
Custom-Header: test-value
Content-Type: application/json

###

### 6.2. 대용량 데이터 POST 테스트
POST http://localhost:8080/interceptor/data
Content-Type: application/json
Authorization: Bearer admin-token-456

{
  "largeData": "이것은 Filter와 Interceptor의 성능을 테스트하기 위한 대용량 데이터입니다. 교육용 예제에서 간단한 인증 시스템을 구현했습니다.",
  "array": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
  "nestedObject": {
    "level1": {
      "level2": {
        "level3": "deep nesting test",
        "authNote": "간단한 토큰 기반 인증 사용"
      }
    }
  },
  "timestamp": "2025-01-01T00:00:00Z"
}

###

### 6.3. 동시 요청 시뮬레이션을 위한 빠른 연속 요청
GET http://localhost:8080/filter/test

###

GET http://localhost:8080/interceptor/test

###

GET http://localhost:8080/comparison/execution-order

###

### 6.4. 잘못된 토큰으로 인증 실패 테스트
GET http://localhost:8080/interceptor/auth/admin
Authorization: Bearer invalid-token-999
Content-Type: application/json

###

### 6.5. 쿠키 기반 인증 테스트 (교육용 시뮬레이션)
GET http://localhost:8080/interceptor/auth/user
Cookie: auth-token=test-token-123; user-role=USER
Content-Type: application/json

###

### ========================================
### 7. 교육용 인증 시스템 테스트
### ========================================

### 7.1. 유효한 토큰 목록 확인 (AuthenticationFilter 오류 응답에서 확인 가능)
GET http://localhost:8080/interceptor/auth/user
Content-Type: application/json

###

### 7.2. 인증 제외 경로 테스트 (필터에서 제외)
GET http://localhost:8080/actuator/health
Content-Type: application/json

###

### 7.3. 다양한 권한 레벨 테스트
# USER 권한으로 ADMIN 엔드포인트 접근 시도
GET http://localhost:8080/interceptor/auth/admin
X-User-Role: USER
Authorization: Bearer test-token-123
Content-Type: application/json

###

# ADMIN 권한으로 성공
GET http://localhost:8080/interceptor/auth/admin
X-User-Role: ADMIN
Authorization: Bearer admin-token-456
Content-Type: application/json

### 