###
# Spring Security 예제 테스트
# 내용.md 6.1절, 6.2절 - 스프링 시큐리티 기본 구조와 API 기반 로그인 처리 예제
###

### 1. 애플리케이션 정보 조회 (인증 불필요)
GET http://localhost:8080/api/info

### 2. 테스트 사용자 목록 조회 (인증 불필요)
GET http://localhost:8080/api/users

### 3. 로그인 성공 테스트 - user1 (USER 권한)
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "user1",
  "password": "password"
}

### 4. 로그인 성공 테스트 - admin (ADMIN 권한)
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "admin",
  "password": "password"
}

### 5. 로그인 성공 테스트 - guest (GUEST 권한)
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "guest",
  "password": "password"
}

### 6. 로그인 실패 테스트 - 잘못된 사용자명
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "wronguser",
  "password": "password"
}

### 7. 로그인 실패 테스트 - 잘못된 비밀번호
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "username": "user1",
  "password": "wrongpassword"
}

### 8. 현재 인증된 사용자 정보 조회 (인증 필요)
# 주의: 로그인 후 세션이 유지되는 상태에서 테스트해야 합니다.
GET http://localhost:8080/api/me

### 9. 관리자 전용 API 접근 테스트 (ADMIN 권한 필요)
# 주의: admin 계정으로 로그인 후 테스트해야 합니다.
GET http://localhost:8080/api/admin/info

### 10. 권한 없는 사용자의 관리자 API 접근 테스트
# user1이나 guest로 로그인 후 관리자 API 접근 시 403 Forbidden 응답 예상
GET http://localhost:8080/api/admin/info

###
# 테스트 시나리오 설명:
# 1. 인증이 불필요한 API들은 바로 접근 가능합니다.
# 2. 로그인 API는 POST 방식으로 JSON 형태의 사용자명/비밀번호를 전송합니다.
# 3. 로그인 성공 시 HTTP 200 OK와 함께 사용자 정보를 반환합니다.
# 4. 로그인 실패 시 HTTP 401 Unauthorized를 반환합니다.
# 5. 인증이 필요한 API는 로그인 후 세션 쿠키가 있어야 접근 가능합니다.
# 6. 관리자 API는 ADMIN 권한이 있는 사용자만 접근 가능합니다.
### 