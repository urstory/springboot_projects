### JWT 기반 인증 시스템 테스트
### 내용.md 6.4절, 6.5절, 6.6절 기반 구현

### 1. 애플리케이션 정보 조회 (공개 엔드포인트)
GET http://localhost:8082/api/info
Accept: application/json

### 2. 헬스 체크
GET http://localhost:8082/api/health
Accept: application/json

### 3. 테스트 사용자 목록 조회 (공개)
GET http://localhost:8082/api/auth/users
Accept: application/json

### 4. 일반 사용자 로그인 (JWT 발급)
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "user1",
  "password": "password"
}

### 5. 관리자 로그인 (JWT 발급)
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "password"
}

### 6. JWT 관리자 로그인 (JWT 발급)
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "jwt_admin",
  "password": "admin123"
}

### 7. 잘못된 비밀번호로 로그인 시도
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "user1",
  "password": "wrongpassword"
}

### 8. 존재하지 않는 사용자로 로그인 시도
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "nonexistent",
  "password": "password"
}

### 9. 현재 사용자 정보 조회 (JWT 토큰 필요)
### 먼저 위의 로그인에서 받은 JWT 토큰을 아래 Authorization 헤더에 넣으세요
GET http://localhost:8082/api/auth/me
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiXSwidG9rZW5UeXBlIjoiQUNDRVNTX1RPS0VOIiwiaWF0IjoxNzUxMjA5NDc1LCJleHAiOjE3NTEyMTMwNzUsImlzcyI6InNlY3VyaXR5ZXhhbTAzIiwiYXVkIjoiYXBpLnNlY3VyaXR5ZXhhbTAzLmNvbSJ9.ErB7RC2OrQYjqySq_QyRnbhkR1pdd9t3NWLwcgXF24w
Accept: application/json

### 10. JWT 토큰 유효성 검증
GET http://localhost:8082/api/auth/validate
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiXSwidG9rZW5UeXBlIjoiQUNDRVNTX1RPS0VOIiwiaWF0IjoxNzUxMjA5NDc1LCJleHAiOjE3NTEyMTMwNzUsImlzcyI6InNlY3VyaXR5ZXhhbTAzIiwiYXVkIjoiYXBpLnNlY3VyaXR5ZXhhbTAzLmNvbSJ9.ErB7RC2OrQYjqySq_QyRnbhkR1pdd9t3NWLwcgXF24w
Accept: application/json

### 11. 유효하지 않은 토큰으로 검증 시도
GET http://localhost:8082/api/auth/validate
Authorization: Bearer invalid.token.here
Accept: application/json

### 12. Authorization 헤더 없이 토큰 검증 시도
GET http://localhost:8082/api/auth/validate
Accept: application/json

### 13. 관리자 정보 조회 (ADMIN 권한 필요)
### 관리자 로그인에서 받은 JWT 토큰 사용
GET http://localhost:8082/api/admin/info
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiXSwidG9rZW5UeXBlIjoiQUNDRVNTX1RPS0VOIiwiaWF0IjoxNzUxMjA5NDc1LCJleHAiOjE3NTEyMTMwNzUsImlzcyI6InNlY3VyaXR5ZXhhbTAzIiwiYXVkIjoiYXBpLnNlY3VyaXR5ZXhhbTAzLmNvbSJ9.ErB7RC2OrQYjqySq_QyRnbhkR1pdd9t3NWLwcgXF24w
Accept: application/json

### 14. 일반 사용자가 관리자 API 접근 시도 (권한 없음)
GET http://localhost:8082/api/admin/info
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiXSwidG9rZW5UeXBlIjoiQUNDRVNTX1RPS0VOIiwiaWF0IjoxNzUxMjA5NDc1LCJleHAiOjE3NTEyMTMwNzUsImlzcyI6InNlY3VyaXR5ZXhhbTAzIiwiYXVkIjoiYXBpLnNlY3VyaXR5ZXhhbTAzLmNvbSJ9.ErB7RC2OrQYjqySq_QyRnbhkR1pdd9t3NWLwcgXF24w
Accept: application/json

### 15. 블랙리스트 통계 조회 (ADMIN 권한 필요)
GET http://localhost:8082/api/admin/blacklist/stats
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGVzIjpbIlJPTEVfQURNSU4iLCJST0xFX1VTRVIiXSwidG9rZW5UeXBlIjoiQUNDRVNTX1RPS0VOIiwiaWF0IjoxNzUxMjA5NDc1LCJleHAiOjE3NTEyMTMwNzUsImlzcyI6InNlY3VyaXR5ZXhhbTAzIiwiYXVkIjoiYXBpLnNlY3VyaXR5ZXhhbTAzLmNvbSJ9.ErB7RC2OrQYjqySq_QyRnbhkR1pdd9t3NWLwcgXF24w
Accept: application/json

### 16. 특정 토큰을 블랙리스트에 추가 (ADMIN 권한 필요)
POST http://localhost:8082/api/admin/blacklist/token
Authorization: Bearer ADMIN_JWT_TOKEN_HERE
Content-Type: application/json

{
  "token": "TARGET_JWT_TOKEN_TO_BLACKLIST"
}

### 17. 현재 토큰을 블랙리스트에 추가 (관리자용)
POST http://localhost:8082/api/admin/blacklist/current
Authorization: Bearer ADMIN_JWT_TOKEN_HERE
Content-Type: application/json

### 18. 블랙리스트된 토큰으로 API 접근 시도
GET http://localhost:8082/api/auth/me
Authorization: Bearer BLACKLISTED_JWT_TOKEN_HERE
Accept: application/json

### 19. 로그아웃 (토큰 블랙리스트 추가)
POST http://localhost:8082/api/auth/logout
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

### 20. 로그아웃된 토큰으로 API 접근 시도
GET http://localhost:8082/api/auth/me
Authorization: Bearer LOGGED_OUT_JWT_TOKEN_HERE
Accept: application/json

### 21. 블랙리스트 전체 초기화 (ADMIN 권한 필요)
DELETE http://localhost:8082/api/admin/blacklist/clear
Authorization: Bearer ADMIN_JWT_TOKEN_HERE
Accept: application/json

### 22. Authorization 헤더 없이 보호된 API 접근 시도
GET http://localhost:8082/api/auth/me
Accept: application/json

### 23. 만료된 토큰으로 API 접근 시도 (1시간 후 테스트)
GET http://localhost:8082/api/auth/me
Authorization: Bearer EXPIRED_JWT_TOKEN_HERE
Accept: application/json

### 24. 잘못된 형식의 Authorization 헤더
GET http://localhost:8082/api/auth/me
Authorization: InvalidFormat
Accept: application/json

### 25. 빈 토큰으로 접근 시도
GET http://localhost:8082/api/auth/me
Authorization: Bearer 
Accept: application/json

###
### 사용법 안내:
### 1. 위의 로그인 API (4, 5, 6번)를 먼저 실행하여 JWT 토큰을 받으세요
### 2. 받은 토큰을 "YOUR_JWT_TOKEN_HERE" 자리에 복사해서 넣으세요
### 3. 관리자 토큰은 "ADMIN_JWT_TOKEN_HERE" 자리에 넣으세요
### 4. 각 테스트를 순서대로 실행하면서 JWT 동작을 확인하세요
###
### 주요 학습 포인트:
### - JWT 토큰 기반 인증 흐름
### - 권한 기반 접근 제어 (RBAC)
### - 토큰 블랙리스트를 통한 무효화
### - 보안 오류 처리 및 응답
### - JWT 토큰의 만료 처리
###