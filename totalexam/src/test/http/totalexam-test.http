### 종합 실습 API 테스트 파일
### Spring Boot + JWT 인증 + 게시판 CRUD API

### 1. 사용자 로그인 (JWT 토큰 발급)
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "user1",
  "password": "password123"
}

### 2. 관리자 로그인
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "password123"
}

### 3. 잘못된 로그인 시도
POST http://localhost:8082/api/auth/login
Content-Type: application/json

{
  "username": "user1",
  "password": "wrongpassword"
}

### 4. JWT 토큰 검증 (인증 필요)
GET http://localhost:8082/api/auth/validate
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MTIxMzgzOSwiZXhwIjoxNzUxMzAwMjM5fQ.Hdq6cXUIel0r5DI6dw3RmbLkyrzV2kwyPjNKOZSES5edqIHYaMLyZdRs1xuTkcMuhhgUSsHdL1Dw0N7NQjxwdQ

### 5. 게시글 목록 조회 (인증 불필요)
GET http://localhost:8082/api/posts

### 6. 게시글 목록 조회 (페이징)
GET http://localhost:8082/api/posts?page=0&size=5

### 7. 게시글 상세 조회 (인증 불필요)
GET http://localhost:8082/api/posts/1

### 8. 게시글 생성 (JWT 인증 필요)
POST http://localhost:8082/api/posts
Authorization: Bearer <JWT_TOKEN>
Content-Type: application/json

{
  "title": "새로운 게시글",
  "content": "JWT 인증을 통해 생성된 새로운 게시글입니다."
}

### 9. 게시글 수정 (JWT 인증 필요, 작성자만 가능)
PUT http://localhost:8082/api/posts/1
Authorization: Bearer <JWT_TOKEN>
Content-Type: application/json

{
  "title": "수정된 게시글 제목",
  "content": "수정된 게시글 내용입니다."
}

### 10. 게시글 삭제 (JWT 인증 필요, 작성자만 가능)
DELETE http://localhost:8082/api/posts/1
Authorization: Bearer <JWT_TOKEN>

### 11. 게시글 검색 (인증 불필요)
GET http://localhost:8082/api/posts/search?keyword=Spring

### 12. 사용자별 게시글 조회 (인증 불필요)
GET http://localhost:8082/api/posts/user/user1

### 13. 인증 없이 게시글 생성 시도 (401 Unauthorized)
POST http://localhost:8082/api/posts
Content-Type: application/json

{
  "title": "인증 없는 게시글",
  "content": "이 요청은 실패해야 합니다."
}

### 14. 다른 사용자의 게시글 수정 시도 (403 Forbidden)
PUT http://localhost:8082/api/posts/2
Authorization: Bearer <JWT_TOKEN>
Content-Type: application/json

{
  "title": "다른 사용자 게시글 수정 시도",
  "content": "이 요청은 실패해야 합니다."
}

### 15. 존재하지 않는 게시글 조회 (404 Not Found)
GET http://localhost:8082/api/posts/999

### 16. 유효성 검증 실패 테스트 (빈 제목)
POST http://localhost:8082/api/posts
Authorization: Bearer <JWT_TOKEN>
Content-Type: application/json

{
  "title": "",
  "content": "제목이 비어있어서 실패해야 합니다."
}

### 17. H2 데이터베이스 콘솔 접속 테스트
GET http://localhost:8082/h2-console

### 18. 헬스 체크 (Actuator)
GET http://localhost:8082/actuator/health

### 19. 애플리케이션 정보 (Actuator)
GET http://localhost:8082/actuator/info

### 20. 메트릭스 (Actuator)
GET http://localhost:8082/actuator/metrics

### 예제 사용법:
### 1. 먼저 로그인 API를 호출하여 JWT 토큰을 얻습니다.
### 2. 응답에서 받은 token 값을 복사합니다.
### 3. 인증이 필요한 API 호출 시 Authorization 헤더에 "Bearer <token>" 형식으로 추가합니다.
### 4. <JWT_TOKEN> 부분을 실제 토큰으로 교체하여 테스트합니다.

### 테스트 사용자 정보:
### - user1 / password123 (일반 사용자)
### - user2 / password123 (일반 사용자)  
### - admin / password123 (관리자)
### - john / password123 (일반 사용자)
### - jane / password123 (일반 사용자) 